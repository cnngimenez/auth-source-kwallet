* auth-source-kwallet

  [[https://melpa.org/#/auth-source-kwallet][file:https://melpa.org/packages/auth-source-kwallet-badge.svg]]
  [[https://melpa.org/#/auth-source-kwallet][file:https://stable.melpa.org/packages/auth-source-kwallet-badge.svg]]

  This package allows one to use KWallet as an auth-source. While KWallet may not be the best thing ever,
  it works pretty well with KDE, so I decided to make this package.

** Usage

   If you are using [[https://github.com/jwiegley/use-package][use-package]], you may install the package using with the following code:

   #+BEGIN_SRC elisp
     (use-package auth-source-kwallet
       :config
       (auth-source-kwallet-enable))
   #+END_SRC

   To enable the auth source, use ~(auth-source-kwallet-enable)~, like in the example above with use-package.

** Using auth-source-search
After loading the library, enabling it, and configuring, ~auth-source-search~ can be used to query kwallet.

To query the secret of "ada@example.com" using the default wallet and folder:

#+begin_src elisp
  (auth-source-search :user "ada" :host "example.com" :type 'kwallet)
#+end_src

Also, user and hostname can be expressed as a label:

#+begin_src elisp
  (auth-source-search :label "ada@example.com" :type 'kwallet)
#+end_src

To use a different wallet and folder than the default one:

#+begin_src elisp
  (auth-source-search :user "ada" :host "example.com"
                      :folder "OtherHosts"
                      :wallet "kdewallet2"
                      :type 'kwallet)
#+end_src

Kwallet stores secrets from different applications, and sometimes they do not use username and hostname to search for it. Use ~:label~ in this cases:

#+begin_src elisp
  (auth-source-search :label "search-key-name" :type 'kwallet)
#+end_src

For example, a LUKS disk password can be searched by changing the folder:

#+begin_src elisp
  (auth-source-search :label "f1bc3d13-7e64-4bcf-8abe-5f155f68e752"
                      :folder "SolidLuks"
                      :type 'kwallet)
#+end_src

Also, Network Managent secrets can be stored on kwallet and retrieved with auth-source:

#+begin_src elisp
  (auth-source-search :label "{0aeca2dd-549f-4095-9001-96dd52d50813};802-11-wireless-security"
                      :folder "Network Management"
                      :type 'kwallet)
#+end_src

Listing all folders in a wallet can be done by:

#+begin_src elisp
  (auth-source-search :list t :folder "" :wallet "kdewallet" :type 'kwallet)
#+end_src

And to list labels (and/or user and hostnames in a specific folder:

#+begin_src elisp
  (auth-source-search :list t :folder "SolidLuks" :wallet "kdewallet" :type 'kwallet)
#+end_src

** Configuration

   The following parameters can be customized:

   - ~auth-source-kwallet-wallet~ :: Default value: "Passwords"

     The wallet to use.
   - ~auth-source-kwallet-folder~ :: Default value: "Passwords"

     The folder to use in the wallet.
   - ~auth-source-kwallet-key-separator~ :: Default value: "@"

     The value used to separate the name and the host when looking up
     the key key in the wallet.
   - ~auth-source-kwallet-executable~ :: Default value: "kwallet-query"

     Executable used to query kwallet.

   So, for example, with the default settings, for hostname of "example.com" and username of "test",
   the secret will be looked up in the Passwords wallet, Passwords folder, under the name
   "test@example.com".
